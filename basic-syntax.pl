#!/usr/bin/perl

use warnings;
no warnings 'experimental';
use strict;
no strict 'refs';
use English;
use utf8;

binmode STDIN, "utf8";
binmode STDOUT, "utf8";
binmode STDERR, "utf8";

local $/;
$_ = <>;

# ignore /^[=:@<]/

s/(?:\(תיקון מס'|תיקון \(מס') (\d+)\) (תש.?".)-\d{4}/(תיקון: $2#$1)/g;
s/\n? *([\(\[])(תי?קון|תיקונים):? */ $1תיקון: /g;
# s/(?<=\(תיקון: )(\S+)\) \(תיקון: (\S+)\)/$1, $2)/g;
s/\) \(תיקון:\s*/, /g;

s/^(חלק\b.*)$/\n= $1 =\n/gm;
s/^((פרק|תוספת)\b.*)$/\n== $1 ==\n/gm;
s/^(סימן\b.*)$/\n=== $1 ===\n/gm;

my $fix_sig = 'תי?קו(?:ן|ים)';
# if (/$fix_sig.*\n\d+\./m and !/^\d+\..*$fix_sig/m) {
# if (/$fix_sig.*\n\d+\./) 
{
	# Should swap chapter title and numeral
	s/^([^=.\n]+)\n(\d[^.\n]*\.) */$2 $1\n/gm;
}

s/^(?:\n?@ *|)(\d[^. ]*\.) *(.*)$/"\n@ $1 " . fix_description($2)/gme;
s/^(\([^)]{1,4}\))/: $1/gm;

s/^(:+) *(\([^)\n]*\)[.;])$/$1 (($2))/gm;
s/^(:+ \([^ )\n]+\)) (\([^)\n]*\)[.;])$/$1 (($2))/gm;

my $num_sig = '\d[^ ,.:;"\n\[\]]*+';
my $law_sig = 'ו?ש?[בהלמ]?(?:חוק|פקוד[הת]|תקנות|צו)';
s/(?<!\[)(ו?ש?[בהלמ]?(סעיף|סעיפים|תקנה|תקנות) $num_sig)(?!\])/[[$1]]/g;
while (
	s/(?<=\]\] )((?:ו-|או )$num_sig)(?!\])/[[$1]]/g | 
	s/\]\]( עד $num_sig)/$1]]/g | 
	s/(?<=\]\], )($num_sig)(?!\])/[[$1]]/g
) {};
s/(?<!\[)(ו?ש?[בהלמ]?(פרק|פרקים|סימן|סימנים|תוספת) ה?(ז[הו]|ראשון|שני|שלישי|רביעי|[א-י][' ]|[טי]"[א-ט]|\d)[^ ,.:;\n\[\]]{0,8}+)(?!\])/[[$1]]/g;
s/(?<!\[)($law_sig [^;.\n]{1,100}?\d{4})(?!\])/[[$1]]/g;
s/\]\] \[\[(?=$law_sig)/ /g;
s/\[\[($law_sig [^\[\]].*?) ($law_sig[^\[\]].*)\]\]/$1 [[$2]]/g;

s/\[\[([^\[\]]*+)\[\[(.*?)\]\](.*?)\]\]/[[$1$2$3]]/g;

s/^(?:\<שם\>|) *(.*)\n/"<שם> ". remove_brakets($1) . "\n"/se;
s/^(=.*)$/remove_brakets($1)/gme;

s/\n*(.*?)\n*$/$1\n/s;
s/\n{3,}/\n\n/g;

print $_;

exit;
1;


sub fix_description {
	my $_ = shift;
	s/(?<=\()(תי?קון|תיקונים):? */תיקון: /;
	s/ה(תש.?".?)/$1/g;
	s/(תש.?".) \(מס' (\d.*?)\)/$1-$2/g;
	while (s/(תש.?".)-(\d[^\,]*|),\s*\(מס' (\d.*?)\)/$1-$2, $1-$3/g) {};
	s/\[(תיקון: .*?)\]/($1)/;
	return $_;
}

sub remove_brakets {
	my $_ = shift;
	s/\[\[//;
	s/\]\]//;
	return $_;
}
